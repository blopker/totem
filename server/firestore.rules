rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isDocOwner(docId) {
      return request.auth != null && (request.auth.uid == resource.id || request.auth.uid == docId);
    }
    function hasAnyRole(roles) {
      return request.auth != null && request.auth.token.roles != null && request.auth.token.roles.hasAny(roles);
    }

    match /topics/{topic} {
      allow read: if request.auth != null;
    }
    match /userAccountState/{uid}/{documents=**} {
      allow read: if request.auth != null && isDocOwner(uid);
      allow write: false;
    }
    match /users/{uid}/{documents=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isDocOwner(uid);
    }
    match /circles/{circleId}/{documents=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // Fix me - should be role based/Testing only
    }
    match /snapCircles/{circleId}/{documents=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // Fix me - should be role based/Testing only
    }
    match /activeCircles/{circleId}/{documents=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // Fix me - should be role based/Testing only
    }

  }
}
